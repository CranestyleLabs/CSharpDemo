//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherClientDemo.WeatherService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weather", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
    [System.SerializableAttribute()]
    public partial class Weather : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string baseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherClientDemo.WeatherService.Clouds cloudsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int codField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherClientDemo.WeatherService.Coord coordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int dtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherClientDemo.WeatherService.Main mainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherClientDemo.WeatherService.Sys sysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherClientDemo.WeatherService.Info[] weatherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherClientDemo.WeatherService.Wind windField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string @base {
            get {
                return this.baseField;
            }
            set {
                if ((object.ReferenceEquals(this.baseField, value) != true)) {
                    this.baseField = value;
                    this.RaisePropertyChanged("base");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherClientDemo.WeatherService.Clouds clouds {
            get {
                return this.cloudsField;
            }
            set {
                if ((object.ReferenceEquals(this.cloudsField, value) != true)) {
                    this.cloudsField = value;
                    this.RaisePropertyChanged("clouds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cod {
            get {
                return this.codField;
            }
            set {
                if ((this.codField.Equals(value) != true)) {
                    this.codField = value;
                    this.RaisePropertyChanged("cod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherClientDemo.WeatherService.Coord coord {
            get {
                return this.coordField;
            }
            set {
                if ((object.ReferenceEquals(this.coordField, value) != true)) {
                    this.coordField = value;
                    this.RaisePropertyChanged("coord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int dt {
            get {
                return this.dtField;
            }
            set {
                if ((this.dtField.Equals(value) != true)) {
                    this.dtField = value;
                    this.RaisePropertyChanged("dt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherClientDemo.WeatherService.Main main {
            get {
                return this.mainField;
            }
            set {
                if ((object.ReferenceEquals(this.mainField, value) != true)) {
                    this.mainField = value;
                    this.RaisePropertyChanged("main");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherClientDemo.WeatherService.Sys sys {
            get {
                return this.sysField;
            }
            set {
                if ((object.ReferenceEquals(this.sysField, value) != true)) {
                    this.sysField = value;
                    this.RaisePropertyChanged("sys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherClientDemo.WeatherService.Info[] weather {
            get {
                return this.weatherField;
            }
            set {
                if ((object.ReferenceEquals(this.weatherField, value) != true)) {
                    this.weatherField = value;
                    this.RaisePropertyChanged("weather");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherClientDemo.WeatherService.Wind wind {
            get {
                return this.windField;
            }
            set {
                if ((object.ReferenceEquals(this.windField, value) != true)) {
                    this.windField = value;
                    this.RaisePropertyChanged("wind");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clouds", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
    [System.SerializableAttribute()]
    public partial class Clouds : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int allField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int all {
            get {
                return this.allField;
            }
            set {
                if ((this.allField.Equals(value) != true)) {
                    this.allField = value;
                    this.RaisePropertyChanged("all");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Coord", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
    [System.SerializableAttribute()]
    public partial class Coord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double lonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lat {
            get {
                return this.latField;
            }
            set {
                if ((this.latField.Equals(value) != true)) {
                    this.latField = value;
                    this.RaisePropertyChanged("lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double lon {
            get {
                return this.lonField;
            }
            set {
                if ((this.lonField.Equals(value) != true)) {
                    this.lonField = value;
                    this.RaisePropertyChanged("lon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Main", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
    [System.SerializableAttribute()]
    public partial class Main : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int humidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int pressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double tempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double temp_maxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double temp_minField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int humidity {
            get {
                return this.humidityField;
            }
            set {
                if ((this.humidityField.Equals(value) != true)) {
                    this.humidityField = value;
                    this.RaisePropertyChanged("humidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int pressure {
            get {
                return this.pressureField;
            }
            set {
                if ((this.pressureField.Equals(value) != true)) {
                    this.pressureField = value;
                    this.RaisePropertyChanged("pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double temp {
            get {
                return this.tempField;
            }
            set {
                if ((this.tempField.Equals(value) != true)) {
                    this.tempField = value;
                    this.RaisePropertyChanged("temp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double temp_max {
            get {
                return this.temp_maxField;
            }
            set {
                if ((this.temp_maxField.Equals(value) != true)) {
                    this.temp_maxField = value;
                    this.RaisePropertyChanged("temp_max");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double temp_min {
            get {
                return this.temp_minField;
            }
            set {
                if ((this.temp_minField.Equals(value) != true)) {
                    this.temp_minField = value;
                    this.RaisePropertyChanged("temp_min");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sys", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
    [System.SerializableAttribute()]
    public partial class Sys : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sunriseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sunsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double message {
            get {
                return this.messageField;
            }
            set {
                if ((this.messageField.Equals(value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sunrise {
            get {
                return this.sunriseField;
            }
            set {
                if ((this.sunriseField.Equals(value) != true)) {
                    this.sunriseField = value;
                    this.RaisePropertyChanged("sunrise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sunset {
            get {
                return this.sunsetField;
            }
            set {
                if ((this.sunsetField.Equals(value) != true)) {
                    this.sunsetField = value;
                    this.RaisePropertyChanged("sunset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Wind", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
    [System.SerializableAttribute()]
    public partial class Wind : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double degField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double speedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double deg {
            get {
                return this.degField;
            }
            set {
                if ((this.degField.Equals(value) != true)) {
                    this.degField = value;
                    this.RaisePropertyChanged("deg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double speed {
            get {
                return this.speedField;
            }
            set {
                if ((this.speedField.Equals(value) != true)) {
                    this.speedField = value;
                    this.RaisePropertyChanged("speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Info", Namespace="http://schemas.datacontract.org/2004/07/WeatherService")]
    [System.SerializableAttribute()]
    public partial class Info : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mainField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string icon {
            get {
                return this.iconField;
            }
            set {
                if ((object.ReferenceEquals(this.iconField, value) != true)) {
                    this.iconField = value;
                    this.RaisePropertyChanged("icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string main {
            get {
                return this.mainField;
            }
            set {
                if ((object.ReferenceEquals(this.mainField, value) != true)) {
                    this.mainField = value;
                    this.RaisePropertyChanged("main");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherService.IWeatherService")]
    public interface IWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetWeather", ReplyAction="http://tempuri.org/IWeatherService/GetWeatherResponse")]
        WeatherClientDemo.WeatherService.Weather GetWeather(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetWeather", ReplyAction="http://tempuri.org/IWeatherService/GetWeatherResponse")]
        System.Threading.Tasks.Task<WeatherClientDemo.WeatherService.Weather> GetWeatherAsync(string city);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : WeatherClientDemo.WeatherService.IWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<WeatherClientDemo.WeatherService.IWeatherService>, WeatherClientDemo.WeatherService.IWeatherService {
        
        public WeatherServiceClient() {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WeatherClientDemo.WeatherService.Weather GetWeather(string city) {
            return base.Channel.GetWeather(city);
        }
        
        public System.Threading.Tasks.Task<WeatherClientDemo.WeatherService.Weather> GetWeatherAsync(string city) {
            return base.Channel.GetWeatherAsync(city);
        }
    }
}
